/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { MapView, PluginDefinition } from "./components/gwf-vis-host/gwf-vis-host";
import { GwfVisHost } from "./components/gwf-vis-host/gwf-vis-host";
export namespace Components {
    interface GwfVisHost {
        "plugins": PluginDefinition[];
        "preferCanvas": boolean;
        "view": MapView;
    }
    interface GwfVisHostSidebar {
        "active": boolean;
        "visHost": GwfVisHost;
    }
}
declare global {
    interface HTMLGwfVisHostElement extends Components.GwfVisHost, HTMLStencilElement {
    }
    var HTMLGwfVisHostElement: {
        prototype: HTMLGwfVisHostElement;
        new (): HTMLGwfVisHostElement;
    };
    interface HTMLGwfVisHostSidebarElement extends Components.GwfVisHostSidebar, HTMLStencilElement {
    }
    var HTMLGwfVisHostSidebarElement: {
        prototype: HTMLGwfVisHostSidebarElement;
        new (): HTMLGwfVisHostSidebarElement;
    };
    interface HTMLElementTagNameMap {
        "gwf-vis-host": HTMLGwfVisHostElement;
        "gwf-vis-host-sidebar": HTMLGwfVisHostSidebarElement;
    }
}
declare namespace LocalJSX {
    interface GwfVisHost {
        "plugins"?: PluginDefinition[];
        "preferCanvas"?: boolean;
        "view"?: MapView;
    }
    interface GwfVisHostSidebar {
        "active"?: boolean;
        "visHost"?: GwfVisHost;
    }
    interface IntrinsicElements {
        "gwf-vis-host": GwfVisHost;
        "gwf-vis-host-sidebar": GwfVisHostSidebar;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "gwf-vis-host": LocalJSX.GwfVisHost & JSXBase.HTMLAttributes<HTMLGwfVisHostElement>;
            "gwf-vis-host-sidebar": LocalJSX.GwfVisHostSidebar & JSXBase.HTMLAttributes<HTMLGwfVisHostSidebarElement>;
        }
    }
}
